#!/usr/bin/env sh


system_type=$(uname -s)

if [ "$system_type" = "Darwin" ]; then
  echo "Bootstrapping for macOS"

  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global
  fi

  # Ensure the PATH is up to date
  export PATH=$(brew --prefix)/bin:$(brew --prefix)/sbin:$PATH

fi

if command -v nvm >/dev/null 2>&1; then
  echo "Bootstrapping node"

  nvm install 'lts/*' --reinstall-packages-from=current

  if command -v npm >/dev/null 2>&1; then
    npm install -g vsce
  fi

fi

if [ -d "$HOME/.vscode" ]; then
  echo "Installing manual VSCode extensions"

  extensions_path="$HOME/.vscode/extensions"

  if command -v deno >/dev/null 2>&1; then
    git clone --depth 1 https://github.com/Veykril/MuPanda.git "$extensions_path/MuPanda"
    prev_path="$PWD"
    cd "$extensions_path/MuPanda"
    deno run --allow-read --allow-write build.ts
    vsce package
    cd "$prev_path"
  fi
fi

if command -v nvim >/dev/null 2>&1; then
  echo "Bootstrapping neovim"
  nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
fi

if ! command -v rustc >/dev/null 2>&1; then
  echo "Bootstrapping Rust tools"

  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  rustup install nightly
fi

if command -v cargo >/dev/null 2>&1; then
  echo "Bootstrapping Rust community tools"

  #cargo install --force tldr
fi